cargo-test 
Execute all unit and integration tests and build examples of a local package

USAGE:
    cargo test [OPTIONS] [TESTNAME] [-- <args>...]

OPTIONS:
    -q, --quiet                      Display one character per test instead of one line
        --lib                        Test only this package's library unit tests
        --bin <NAME>...              Test only the specified binary
        --bins                       Test all binaries
        --example <NAME>...          Test only the specified example
        --examples                   Test all examples
        --test <NAME>...             Test only the specified test target
        --tests                      Test all tests
        --bench <NAME>...            Test only the specified bench target
        --benches                    Test all benches
        --all-targets                Test all targets
        --doc                        Test only this library's documentation
        --no-run                     Compile, but don't run tests
        --no-fail-fast               Run all tests regardless of failure
    -p, --package <SPEC>...          Package to run tests for
        --all                        Alias for --workspace (deprecated)
        --workspace                  Test all packages in the workspace
        --exclude <SPEC>...          Exclude packages from the test
    -j, --jobs <N>                   Number of parallel jobs, defaults to # of CPUs
        --release                    Build artifacts in release mode, with optimizations
        --profile <PROFILE-NAME>     Build artifacts with the specified profile
        --features <FEATURES>...     Space or comma separated list of features to activate
        --all-features               Activate all available features
        --no-default-features        Do not activate the `default` feature
        --target <TRIPLE>...         Build for the target triple
        --target-dir <DIRECTORY>     Directory for all generated artifacts
        --manifest-path <PATH>       Path to Cargo.toml
        --message-format <FMT>...    Error format
    -v, --verbose                    Use verbose output (-vv very verbose/build.rs output)
        --color <WHEN>               Coloring: auto, always, never
        --frozen                     Require Cargo.lock and cache are up to date
        --locked                     Require Cargo.lock is up to date
        --offline                    Run without accessing the network
    -Z <FLAG>...                     Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details
    -h, --help                       Prints help information

ARGS:
    <TESTNAME>    If specified, only run tests containing this string in their names
    <args>...     Arguments for the test binary

Run `cargo help test` for more detailed information.

